#include<stdio.h>
#include<conio.h>
#define TRUE 1
#define FALSE 0
int inc[50],w[50],sum,n;
int subset(int i,int wt,int total)
{
return(((wt+total)>=sum)&&((wt==sum)||(wt+w[i+1]<=sum)));
}
void main()
{
int i,j,n,temp,total=0;
printf("Enter how many numbers:");
scanf("%d",&n);
printf("Enter %d numbers to th set:",n);
for(i=0;i<n;i++)
{
scanf("%d",&w[i]);
total+=w[i];
}
printf("Input the sum value to create sub set:");
scanf("%d",&sum);
for(i=0;i<=n;i++)
for(j=0;j<n-1;j++)
if(w[j]>w[j+1])
{
temp=w[j];
w[j]=w[j+1];
w[j+1]=temp;
}
printf("The given %d numbers in ascending order:",n);
for(i=0;i<n;i++)
printf("%d\t",w[i]);
if((total<sum))
printf("\nSubset construction is not possible");
else
{
for(i=0;i<n;i++)
inc[i]=0;
printf("\nThe solution using backtracking is:");
sumset(-1,0,total);
}
getch();
}
void sumset(int i,int wt,int total)
{
int j;
if(subset(i,wt,total))
{
if(wt==sum)
{
printf("\n{");
for(j=0;j<=i;j++)
if(inc[j])
printf("%d\t",w[j]);
printf("}\n"); }
else
{
inc[i+1]=TRUE;
sumset(i+1,wt+w[i+1],total-w[i+1]);
inc[i+1]=FALSE;
sumset(i+1,wt,total-w[i+1]);
} }}
Output
Enter how many numbers:6
Enter 6 numbers to the set:10 5 13 15 12 18
Input the sum value to create sub set:30
The given 6 numbers in ascending order:5 10 12 13 15 18
The solution using backtracking is:
{ 5 10 15 }
{ 5 12 13 }
{ 12 18 }
